name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and run tests
      run: |
        chmod +x run_tests.sh
        ./run_tests.sh
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          Code/PocketMage_V3/.pio/build/native/test/
        retention-days: 7

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check file permissions
      run: |
        echo "Checking for executable files that shouldn't be..."
        find . -name "*.cpp" -executable -type f && exit 1 || echo "‚úÖ No executable source files found"
        find . -name "*.h" -executable -type f && exit 1 || echo "‚úÖ No executable header files found"
        
    - name: Check for large files
      run: |
        echo "Checking for files larger than 10MB..."
        find . -type f -size +10M -not -path "./.git/*" -not -path "./Code/PocketMage_V3/src/assets.cpp" | head -10
        large_files=$(find . -type f -size +10M -not -path "./.git/*" -not -path "./Code/PocketMage_V3/src/assets.cpp" | wc -l)
        if [ $large_files -gt 0 ]; then
          echo "‚ö†Ô∏è Found $large_files large files (excluding assets.cpp)"
        else
          echo "‚úÖ No unexpected large files found"
        fi
        
    - name: Validate project structure
      run: |
        echo "Validating project structure..."
        required_files=(
          "Code/PocketMage_V3/platformio.ini"
          "Code/PocketMage_V3/src/TASKS.cpp"
          "Code/PocketMage_V3/test/test_tasks.cpp"
          "Dockerfile"
          "run_tests.sh"
        )
        
        missing_files=0
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "‚ùå Missing required file: $file"
            missing_files=$((missing_files + 1))
          else
            echo "‚úÖ Found: $file"
          fi
        done
        
        if [ $missing_files -gt 0 ]; then
          echo "‚ùå $missing_files required files are missing"
          exit 1
        else
          echo "‚úÖ All required files found"
        fi

  # Optional: Build for ESP32 to catch compilation issues
  build-esp32:
    name: ESP32 Compilation Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install PlatformIO
      run: |
        pip install --upgrade platformio==6.1.17
        
    - name: Build for ESP32
      run: |
        cd Code/PocketMage_V3
        pio lib install
        pio run -e PM_V3 --target checkprogsize
        
    - name: Check binary size
      run: |
        cd Code/PocketMage_V3
        echo "üìä Firmware size analysis:"
        pio run -e PM_V3 --target size 